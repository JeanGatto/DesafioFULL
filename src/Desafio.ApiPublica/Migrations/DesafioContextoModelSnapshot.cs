// <auto-generated />
using Desafio.Infraestrutura.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using System;

namespace Desafio.ApiPublica.Migrations
{
    [DbContext(typeof(DesafioContexto))]
    partial class DesafioContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:Collation", "Latin1_General_CI_AI")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Desafio.Dominio.Entidades.Devedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR(11)");

                    b.Property<DateTime>("CadastradoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("Devedor");
                });

            modelBuilder.Entity("Desafio.Dominio.Entidades.Divida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CadastradoEm")
                        .HasColumnType("datetime2");

                    b.Property<int>("DevedorId")
                        .HasColumnType("int");

                    b.Property<decimal>("JurosAoMes")
                        .HasPrecision(10, 2)
                        .HasColumnType("NUMERIC(10,2)");

                    b.Property<decimal>("Multa")
                        .HasPrecision(10, 2)
                        .HasColumnType("NUMERIC(10,2)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)");

                    b.HasKey("Id");

                    b.HasIndex("DevedorId");

                    b.HasIndex("Numero");

                    b.ToTable("Divida");
                });

            modelBuilder.Entity("Desafio.Dominio.Entidades.Parcela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CadastradoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("DATE");

                    b.Property<int>("DividaId")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasPrecision(10, 2)
                        .HasColumnType("NUMERIC(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("DividaId");

                    b.ToTable("Parcela");
                });

            modelBuilder.Entity("Desafio.Dominio.Entidades.Divida", b =>
                {
                    b.HasOne("Desafio.Dominio.Entidades.Devedor", "Devedor")
                        .WithMany("Dividas")
                        .HasForeignKey("DevedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Devedor");
                });

            modelBuilder.Entity("Desafio.Dominio.Entidades.Parcela", b =>
                {
                    b.HasOne("Desafio.Dominio.Entidades.Divida", "Divida")
                        .WithMany("Parcelas")
                        .HasForeignKey("DividaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Divida");
                });

            modelBuilder.Entity("Desafio.Dominio.Entidades.Devedor", b =>
                {
                    b.Navigation("Dividas");
                });

            modelBuilder.Entity("Desafio.Dominio.Entidades.Divida", b =>
                {
                    b.Navigation("Parcelas");
                });
#pragma warning restore 612, 618
        }
    }
}
